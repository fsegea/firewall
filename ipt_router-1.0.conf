#!/bin/bash
IPT="/sbin/iptables"

# Server IP
#SERVER_IP="$(ip addr show eth0 | grep 'inet ' | cut -f2 | awk '{ print $2}')"
SERVER_IP="10.10.0.1"

# Your DNS servers you use: cat /etc/resolv.conf
DNS_SERVER="1.1.1.3 1.0.0.3"

# Allow connections to this package servers
PACKAGE_SERVER="deb.debian.org archive.raspberrypi.com"

echo "flush iptable rules"
$IPT -F
$IPT -X
$IPT -t nat -F
$IPT -t nat -X
$IPT -t mangle -F
$IPT -t mangle -X

#Reiniciar los contadores en las tablas filter y nat
$IPT -Z
$IPT -t nat -Z
$IPT -t mangle -Z


######################
#Politica por defecto#
######################
echo "Set default policy to 'DROP'"
$IPT -P INPUT   DROP
$IPT -P FORWARD DROP
$IPT -P OUTPUT  DROP


##############################
#### FORMATO DE LAS REGLA ####
##############################

#APPEND // INSERT

# $IPT -A|-I [CADENA(INPUT|OUTPUT|FORWARD] [-p PROTOCOLO] [-s IP ORIGEN] [-d IP DESTINO] 
# [-i INTERFAZ ENTRADA] [-o INTERFAZ SALIDA] [-j ACCEPT|DROP]



##############################
#### DNS		  ####
##############################
for ip in $DNS_SERVER
do
	echo "Allowing DNS lookups (tcp, udp port 53) to server '$ip'"
	$IPT -A OUTPUT -p udp -d $ip --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
	$IPT -A INPUT  -p udp -s $ip --sport 53 -m state --state ESTABLISHED     -j ACCEPT
#	$IPT -A OUTPUT -p tcp -d $ip --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
#	$IPT -A INPUT  -p tcp -s $ip --sport 53 -m state --state ESTABLISHED     -j ACCEPT
done

##############################
### Loopback
##############################
$IPT -I INPUT 1 -i lo -j ACCEPT -m comment --comment "permite todo el loopback"
$IPT -I OUTPUT 1 -o lo -j ACCEPT -m comment --comment "permite todo el loopback"


##############################
### Permitimos actualizar paquetes
##############################
#for ip in $PACKAGE_SERVER
#do
#	echo "Allow connection to '$ip' on port 21"
#	$IPT -A OUTPUT -p tcp -d "$ip" --dport 21  -m state --state NEW,ESTABLISHED -j ACCEPT
#	$IPT -A INPUT  -p tcp -s "$ip" --sport 21  -m state --state ESTABLISHED     -j ACCEPT

#	echo "Allow connection to '$ip' on port 80"
#	$IPT -A OUTPUT -p tcp -d "$ip" --dport 80  -m state --state NEW,ESTABLISHED -j ACCEPT
#	$IPT -A INPUT  -p tcp -s "$ip" --sport 80  -m state --state ESTABLISHED     -j ACCEPT

#	echo "Allow connection to '$ip' on port 443"
#	$IPT -A OUTPUT -p tcp -d "$ip" --dport 443 -m state --state NEW,ESTABLISHED -j ACCEPT
#	$IPT -A INPUT  -p tcp -s "$ip" --sport 443 -m state --state ESTABLISHED     -j ACCEPT
#done



#######################################################################################################
## Global iptable rules. Not IP specific

#echo "Allowing new and established incoming connections to port 21, 80, 443"
#$IPT -A INPUT  -p tcp -m multiport --dports 21,80,443 -m state --state NEW,ESTABLISHED -j ACCEPT
#$IPT -A OUTPUT -p tcp -m multiport --sports 21,80,443 -m state --state ESTABLISHED     -j ACCEPT

#####################
# Permitimos conexiones salientes de ping
#####################
echo "Allow outgoing icmp connections (pings,...)"
$IPT -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment 'Permite hacer ping a la wan'
$IPT -A INPUT  -p icmp -m state --state ESTABLISHED,RELATED     -j ACCEPT -m comment --comment 'Permite recibir ping desde wan'

echo "Permite el ping desde la red local"
$IPT -A INPUT  -p icmp -i eth0 -m state --state NEW,ESTABLISHED,RELATED -m comment --comment 'Permite ping desde la red local' -j ACCEPT
#$IPT -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT



#####################
#Permito el ssh de entrada en la interfaz eth0
#####################
echo "Permite conectar por ssh dentro de la red local"
$IPT -A INPUT  -j ACCEPT -p tcp --dport 22 -i eth0 -s 10.10.0.0/24 -m comment --comment 'Permite ssh desde la interfaz local'
$IPT -A OUTPUT -j ACCEPT -p tcp --sport 22 -o eth0 -d 10.10.0.0/24 -m comment --comment 'Permite ssh desde la interfaz local'

$IPT -A OUTPUT -j ACCEPT -p tcp --dport 22 -o eth0 -d 10.10.0.0/24 -m comment --comment 'Permite ssh desde la interfaz local'
$IPT -A INPUT  -j ACCEPT -p tcp --sport 22 -i eth0 -s 10.10.0.0/24 -m comment --comment 'Permite ssh desde la interfaz local'



#####################
#ntp
#####################
echo "Allow outgoing connections to port 123 (ntp syncs)"
$IPT -A OUTPUT -j ACCEPT -p udp --dport 123 -m comment --comment "NTP" -m state --state NEW,ESTABLISHED
$IPT -A INPUT  -j ACCEPT -p udp --sport 123 -m comment --comment "NTP" -m state --state ESTABLISHED

#####################
# 443 ( para el squid)
#####################
echo "Permite conexiones salientes por el puerto 443"
$IPT -A OUTPUT -j ACCEPT -p tcp --dport 443 -m comment --comment "443 para el squid"
$IPT -A INPUT -j ACCEPT -p tcp --sport 443 -m comment --comment "443 para el squid" #-m state --state ESTABLISHED

#####################
# 80 (para el apt y para el squid)
#####################
echo "Permite conexiones salientes por el puerto 80"
$IPT -A OUTPUT -j ACCEPT -p tcp --dport 80 -m comment --comment "80 para apt" -m state --state NEW,ESTABLISHED
$IPT -A INPUT  -j ACCEPT -p tcp --sport 80 -m comment --comment "80 para apt" -m state --state ESTABLISHED

#####################
# dhcp cliente
#####################
echo "Permite conexiones renovar la ip con el ISP"
$IPT -A OUTPUT -j ACCEPT -p udp --dport 67 --sport 68 -o eth0.20 -m comment --comment "cliente dhcp" -m state --state NEW,ESTABLISHED
$IPT -A INPUT  -j ACCEPT -p udp --dport 68 --sport 67 -i eth0.20 -m comment --comment "cliente dhcp" -m state --state ESTABLISHED

#####################
# squid local
#####################
# proxy normal
$IPT -A INPUT -j ACCEPT -p tcp --dport 3128 -i eth0
$IPT -A OUTPUT -j ACCEPT -p tcp --sport 3128 -o eth0
# proxy https transparente
$IPT -A INPUT -j ACCEPT -p tcp --dport 3129 -i eth0
$IPT -A OUTPUT -j ACCEPT -p tcp --sport 3129 -o eth0

#####################
# SERVIDOR DHCP
#####################
$IPT -A INPUT  -j ACCEPT -p udp --sport 68 --dport 67 -i eth0 -s 10.10.0.0/24 -m comment --comment "servicio dhcp"
$IPT -A OUTPUT -j ACCEPT -p udp --dport 68 --sport 67 -o eth0 -d 10.10.0.0/24 -m comment --comment "servicio dhcp"

#####################
# SERVIDOR DNS
#####################
$IPT -A INPUT   -j ACCEPT -p udp --dport 53 -i eth0 -m comment --comment "servicio dns" -m state --state NEW,ESTABLISHED
$IPT -A OUTPUT  -j ACCEPT -p udp --sport 53 -o eth0 -m comment --comment "servicio dns" -m state --state ESTABLISHED






#####################
## 5353 mDNS
#####################
#$IPT -A INPUT   -s 10.10.0.0/24 -m pkttype --pkt-type multicast -j ACCEPT
#$IPT -A OUTPUT  -m pkttype --pkt-type multicast -j ACCEPT
$IPT -A INPUT  -j ACCEPT -p udp --dport 5353 --sport 5353 -s 10.10.0.0/24 -m comment --comment "servicio mdns" -i eth0
$IPT -A OUTPUT -j ACCEPT -p udp --dport 5353 --sport 5353 -s 10.10.0.0/24 -m comment --comment "servicio mdns" -o eth0

#####################
# LOG de depuracion de las cadenas INPUT y OUTPUT
#####################
$IPT -A INPUT  -j LOG --log-prefix '** IP ENTRADA BLOQUEADA **' -m limit --limit 12/min
$IPT -A OUTPUT -j LOG --log-prefix '** IP SALIDA BLOQUEADA **' -m limit --limit 12/min


#################################################
# REENVIO
################################################

#####################
# UDP 443 HTTP3
#####################
#bloquea el puerto http3 de google udp 443
#fuerza a los servicios de google a que pase por el squid
$IPT -A FORWARD -i eth0    -o eth0.20 -j DROP   -s 10.10.0.0/24 -p udp --dport 443 -m comment --comment "bloquea http3"



#####################
# Permite el reenvio entre las interfaces
#####################
$IPT -A FORWARD -i eth0    -o eth0    -j ACCEPT -s 10.10.0.0/24 -m comment --comment "lan to lan"
$IPT -A FORWARD -i eth0    -o eth0.20 -j ACCEPT -s 10.10.0.0/24 -m comment --comment "lan to wan"
$IPT -A FORWARD -i eth0.20 -o eth0    -j ACCEPT -d 10.10.0.0/24 -m comment --comment "wan to lan"

$IPT -A FORWARD -j LOG --log-prefix '** REENVIO **'
#$IPT -A FORWARD -j DROP


####################################################
# NAT
####################################################

$IPT -t nat -A POSTROUTING -o eth0.20 -j MASQUERADE -m comment --comment "Enmascaramiento de lan>wan"
#$IPT -t nat -A POSTROUTING -o eth0 -j MASQUERADE -m comment --comment "Enmascaramiento de lan>lan"

#####################
#DNAT
#####################

#wireguard
$IPT -t nat -A PREROUTING -p udp --dport 51820 -m comment --comment "wireguard" -j DNAT --to-destination 10.10.0.100 -i eth0.20

#homeassistant
$IPT -t nat -A PREROUTING -p tcp --dport 443 -m comment --comment "homeassistant" -j DNAT --to-destination 10.10.0.100 -i eth0.20


################ ENFORCE DNS
#La siguiente regla permite direccionar las peticiones al puerto 53 del router hacia un ordenador diferente
#ademas tiene en cuenta 2 excepciones la de cualquier interfaz del router (LOCAL)
# y la del ordenador que ejecuta el dns (pihole o adguard) con su mac

echo "Reenvio hacia AdGuard Home"
#activa el reenvio al adguard
$IPT -t nat -A PREROUTING -i eth0 -m mac "!" --mac-source 52:54:23:3b:94:36 -p udp --dport 53 -m addrtype "!" --src-type LOCAL -j DNAT --to 10.10.0.21:53

#echo "Reenvio hacia pihole"
#activa el reenvio al pihole
#$IPT -t nat -A PREROUTING -i eth0 -m mac "!" --mac-source 00:e0:4c:df:3e:b6 -p udp --dport 53 -m addrtype "!" --src-type LOCAL -j DNAT --to 10.10.0.100:53



# despues de esto hay que eliminar el route del ordenador con el dns para que todo lo pase por el router
# ya que de lo contrario no funcionara al encontrar una respuesta con una direccion origen diferente al de la peticion
# esto lo podemos hacer de varias maneras
# 1) enmascarando las peticiones dns del router hacien el DNS
# iptables -t nat -o eth0 -A POSTROUTING -j MASQUERADE -p udp --dport 53 #pendiente de probar especificando puerto y protocolo
# 2) eliminando la ruta locl en el servidor dns para que todo lo haga por el gateway
# ip route delete 10.10.0.0/24
# 3) colocando el servidor dns en otro segmento de red, por ejemplo 10.10.1.0/24 #pendiente de probar



############################
# squid
############################

#iptables -t nat -A PREROUTING -s 10.10.0.1 -p tcp --dport 80 -j ACCEPT
#iptables -t nat -A PREROUTING -s 10.10.0.103 -p tcp --dport 443 -j REDIRECT --to-port 3129
#iptables -t nat -A POSTROUTING -j MASQUERADE
#iptables -t mangle -A PREROUTING -p tcp --dport 3129 -j DROP





##############################
#MUESTRA LAS REGLAS
##############################
$IPT -L -nv -t mangle --line-numbers
$IPT -L -nv -t nat --line-numbers
$IPT -L -nv --line-numbers


#Salva las reglas de forma permanente
$IPT-save > /etc/iptables/rules.v4

exit 0
